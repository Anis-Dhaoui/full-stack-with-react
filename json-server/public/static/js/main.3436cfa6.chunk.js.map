{"version":3,"sources":["shared/baseURL.js","components/LoadingComponent.js","components/RenderComponent.js","components/HomeComponent.js","components/MenuComponent.js","components/FormsComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/ContactComponent.js","components/AboutComponent.js","redux/actionsCreator.js","redux/actionsType.js","components/MainComponent.js","redux/connectStore.js","redux/dishesRed.js","redux/commentsRed.js","redux/leadersRed.js","redux/promotionsRed.js","redux/FeedbackFormState.js","App.js","redux/configStore.js","serviceWorker.js","index.js"],"names":["baseUrl","Loading","className","RenderCard","item","dl","em","in","duration","delay","transformProps","exitTransform","Card","CardImg","src","image","alt","name","CardBody","CardTitle","designation","CardSubtitle","CardText","description","RenderLeader","leader","chunk","map","leaderItem","key","id","Media","tag","left","middle","object","body","heading","RenderMenuItem","dishx","to","width","CardImgOverlay","RenderDish","dish","tranformProps","with","RenderComments","cmnts","splittedDate","date","split","finalDate","Date","slice","toDateString","style","font","comment","color","author","Home","props","dishesLoading","dishesErrorMsg","promo","promoLoading","promoErrorMsg","leadersLoading","leadersErrorMsg","Menu","menu","dishes2","mountedDishes","isLoading","errMsg","Breadcrumb","BreadcrumbItem","active","required","val","minMaxLength","minLen","maxLen","length","isNumber","isNaN","validEmail","test","CommentForm","state","isFormOpen","toggleModal","bind","handleSubmit","this","setState","values","postCmnt","dishId","rating","Button","onClick","outline","Modal","isOpen","toggle","ModalHeader","ModalBody","onSubmit","value","Row","Label","htmlFor","xs","Col","size","offset","select","model","text","placeholder","validators","show","messages","htmlfor","textarea","rows","type","Component","ContactForm","postFeedback","JSON","parse","stringify","console","log","resetFeedbackF","md","check","checkbox","LoginForm","isModalOpen","handleLogin","event","alert","user","pwd","remember","checked","preventDefault","FormGroup","Input","innerRef","userInput","DishDetail","loading","errorMsg","cmntsErrorMsg","Header","toggleModalRef","showModal","onLoginClick","isNavOpen","toggleNav","Fragment","Navbar","dark","expand","NavbarBrand","href","height","NavbarToggler","Collapse","navbar","Nav","NavItem","Jumbotron","ref","Footer","Contact","role","resetFeedback","About","CardHeader","title","list","leaders","dishesFailed","errmsg","payload","commentsFailed","promosLoading","promosFailed","leadersFailed","Main","fetchLeaders","fetchDishesx","fetchPromotions","fetchComments","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","dishes","filter","dishItem","featured","promotions","mountedPromotions","promoItem","mountedLeaders","exact","match","ddItem","parseInt","params","dishIdx","comments","mountedComments","cmntsItem","postComment","resetFeedbackForm","withRouter","connect","x","dispatch","ratingx","authorx","commentx","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","Error","status","statusText","response2","message","json","catch","error","addDishes","actions","reset","addComments","promos","addPromos","addLeaders","feedbackObj","feedback","addPostedFeedback","Dishes","action","Comments","concat","Leaders","Promotions","initialFeedback","firstName","lastName","telNum","email","agree","contactType","storex","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","store","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3436cfa6.chunk.js","sourcesContent":["export const baseUrl = \"http://localhost:3001/\";","import React from 'react';\r\n\r\nexport const Loading = ()=>{\r\n    return(\r\n        <div className=\"container py-4 my-4\">\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-auto my-4\">\r\n                        <span className=\"fa fa-spinner fa-pulse fa-fw fa-3x text-primary\"></span>\r\n                        <p>Loading...</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, CardSubtitle, CardBody, CardText, Media } from 'reactstrap';\r\nimport { baseUrl } from '../shared/baseURL';\r\nimport { Loading } from './LoadingComponent';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n//This Component for the Home Page\r\nexport function RenderCard({item, dl, em}) {\r\n    if(dl){\r\n        return(\r\n                <Loading />\r\n        );\r\n    } else if(em){\r\n        return(\r\n                <div className=\"container py-4 my-4\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-auto my-4\">\r\n                            <h4>{em}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        );\r\n    }else  \r\n    return(\r\n        <FadeTransform in duration={1200} delay={100} transformProps={{exitTransform: 'scale(0.5) translateY(-50%)'}} >\r\n            <Card>\r\n                <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                    <CardText>{item.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </FadeTransform>\r\n    );\r\n};\r\n\r\n//This Component for the About Page\r\n// export function RenderLeader({leader}){\r\n//     return(\r\n//         <div key={leader.id} className=\"mt-3\">\r\n//             <Media tag=\"li\">\r\n//                 <Media left middle>\r\n//                     <img object className=\"mt-2\" src={baseUrl + leader.image} alt={leader.name}/>\r\n//                 </Media>\r\n//                 <Media body className=\"ml-4\">\r\n//                     <Media heading>{leader.name}</Media>\r\n//                     <Media className=\"my-2\">{leader.designation}</Media>\r\n//                     <p className=\"pr-4\">{leader.description}</p>\r\n//                 </Media>\r\n//             </Media>\r\n//         </div>\r\n//     )\r\n// };\r\nexport function RenderLeader({leader}){\r\n    return(\r\n        <Stagger in chunk={4} duration={1500} delay={500}>\r\n            {leader.map((leaderItem) =>{\r\n                    return(\r\n                        <Fade in>\r\n                            <div key={leaderItem.id} className=\"mt-3\">\r\n                                <Media tag=\"li\">\r\n                                    <Media left middle>\r\n                                        <img object className=\"mt-2\" src={baseUrl + leaderItem.image} alt={leaderItem.name}/>\r\n                                    </Media>\r\n                                    <Media body className=\"ml-4\">\r\n                                        <Media heading>{leaderItem.name}</Media>\r\n                                        <Media className=\"my-2\">{leaderItem.designation}</Media>\r\n                                        <p className=\"pr-4\">{leaderItem.description}</p>\r\n                                    </Media>\r\n                                </Media>\r\n                            </div>\r\n                        </Fade>\r\n                    )\r\n                })}\r\n        </Stagger>\r\n    )\r\n};\r\n\r\n\r\n//This Component for the Menu Page\r\nexport function RenderMenuItem({dishx}) {  \r\n    return(\r\n      <Link to={`/menu/${dishx.id}`}>\r\n        <Card key={dishx.id}>\r\n            <CardImg width=\"100%\" src={baseUrl + dishx.image} alt={dishx.name} />\r\n            <CardImgOverlay>\r\n                <CardTitle>{dishx.name}</CardTitle>\r\n            </CardImgOverlay>\r\n        </Card>\r\n      </Link>\r\n  \r\n    )\r\n  };\r\n\r\n //This Component for the menu item Description in the Menu Page that exported to the DishdetailComponet file\r\nexport function RenderDish ({dish}){\r\n            return (\r\n                <FadeTransform in tranformProps={{exitTransform: 'scale(0.5) translateY(-50%)'}} >\r\n                    <Card>\r\n                        <CardImg with=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                            <CardText>{dish.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </FadeTransform>\r\n            )\r\n};\r\n\r\n //This Component for the menu item Comments in the Menu Page that exported to the DishdetailComponet file\r\nexport function RenderComments ({cmnts, em}) {\r\n    if(em){\r\n        return(\r\n            <h4>{em}</h4>\r\n        )\r\n    }else{\r\n        return(\r\n            <Stagger in>\r\n                {cmnts.map((item) =>{\r\n                    let splittedDate = item.date.split(\"-\");\r\n                    let finalDate = new Date(splittedDate[0], splittedDate[1] - 1, splittedDate[2].slice(0,2)).toDateString();\r\n                    return(\r\n                        <Fade in>\r\n                            <ul className=\"list-unstyled pb-3\">\r\n                                <li style={{font:\"18px Arial, sans-serif\"}}>{item.comment}</li>\r\n                                <li style={{color:\"gray\"}}> -- <strong>{item.author}, </strong> {finalDate}</li>\r\n                            </ul>\r\n                        </Fade>\r\n                    )\r\n                })}\r\n            </Stagger>\r\n        )\r\n    }\r\n        \r\n};\r\n","import React from 'react';\r\nimport {RenderCard} from './RenderComponent';\r\n\r\nfunction Home (props) {\r\n      return(\r\n          <div className=\"container\">\r\n            <div className=\"row justify-content-start\">\r\n              <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.dish} dl={props.dishesLoading} em={props.dishesErrorMsg} />\r\n              </div>\r\n              <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.promo} dl={props.promoLoading} em={props.promoErrorMsg} />\r\n              </div>\r\n              <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.leader} dl={props.leadersLoading} em={props.leadersErrorMsg} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n      );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { RenderMenuItem } from './RenderComponent';\r\nimport { Loading } from './LoadingComponent';\r\n\r\nconst Menu = (props) => {\r\n  const menu = props.dishes2.mountedDishes.map((dish) => {\r\n        return (\r\n          <div className=\"col-12 col-md-5 m-1\">\r\n            <RenderMenuItem dishx={dish} /> \r\n          </div>\r\n        );\r\n    });\r\n  \r\n  if(props.dishes2.isLoading){\r\n      return(\r\n              <Loading />\r\n      );\r\n  }else if(props.dishes2.errMsg){\r\n    return(\r\n      <div className=\"container py-4 my-4\">\r\n          <div className=\"row justify-content-center\">\r\n              <div className=\"col-auto my-4\">\r\n                  <h4>{props.dishes2.errMsg}</h4>\r\n              </div>\r\n          </div>\r\n      </div>\r\n    )\r\n  }else\r\n return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <Breadcrumb>\r\n              <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n              <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n            </Breadcrumb>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n              {menu}\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\nexport default Menu;\r\n","import React, { Component } from 'react';\r\nimport { LocalForm, Control, Errors, Form} from 'react-redux-form';\r\nimport { Row, Label, Col, Button, Modal, ModalHeader, ModalBody, FormGroup, Input, Form as ReactstrapForm } from 'reactstrap';\r\n\r\nconst required = (val) => val;\r\nconst minMaxLength = (minLen, maxLen) => (val) => !val || (val.length >= minLen && val.length <= maxLen);\r\nconst isNumber = (val) => !isNaN(val);\r\nconst validEmail = (val) => !val || /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n\r\n//This a form for the comment submit in the Menu Page\r\nexport class CommentForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isFormOpen: false\r\n        }\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    };\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n            isFormOpen: !this.state.isFormOpen\r\n        })\r\n    };\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.postCmnt(this.props.dishId, values.rating, values.author, values.comment);\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"mb-5\">\r\n                <Button onClick={this.toggleModal} outline color=\"success\"><span className=\"fa fa-comment fa-lg\"> Comment</span></Button>\r\n                <Modal isOpen={this.state.isFormOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>\r\n                        Submit Comment\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={value => this.handleSubmit(value)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" xs={12}>Rating</Label>\r\n                                <Col xs={{size: 12, offset: 0}}>\r\n                                    <Control.select model=\".rating\" id=\"rating\" className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\" xs={12}>Your name</Label>\r\n                                <Col xs={12}>\r\n                                    <Control.text model=\".author\" id=\"author\" placeholder=\"Your name\" className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minMaxLength: minMaxLength(3, 15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors className=\"text-danger\" \r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: \"Required field\",\r\n                                            minMaxLength: \"Enter a valid name\"\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlfor=\"comment\" xs={12}>Comment</Label>\r\n                                <Col xs={12}>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" placeholder=\"Type your comment here\" rows=\"6\" className=\"form-control\" />\r\n                                </Col>\r\n                            </Row> \r\n                            <Row className=\"form-group\">\r\n                            <Col xs={{size: 3, offset:4}}>\r\n                                <Button type=\"submit\" color=\"primary\">Submit</Button>\r\n                            </Col>\r\n                            </Row>                      \r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n            )\r\n    }\r\n};\r\n\r\n//This is a feedback form in the Contact us page\r\nexport class ContactForm extends Component{\r\n\r\n    handleSubmit(values) {\r\n        this.props.postFeedback(JSON.parse(JSON.stringify(values)));\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        this.props.resetFeedbackF();\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <Form model=\"feedback\" onSubmit={(value) => this.handleSubmit(value)}>\r\n            <Row className=\"form-group\">\r\n            <Label htmlFor=\"firstName\" md={2}>First Name</Label>\r\n                <Col md={10}>\r\n                    <Control.text className=\"form-control\" model=\".firstName\" id=\"firstName\" placeholder=\"First Name\" \r\n                        validators={{\r\n                            required, minMaxLength: minMaxLength(3, 15)\r\n                        }}\r\n                    />\r\n                    <Errors className=\"text-danger\"\r\n                        model=\".firstName\"\r\n                        show=\"touched\"\r\n                        messages={{\r\n                            required: 'Rquired field',\r\n                            minMaxLength: 'Please enter a valid Name'\r\n                        }}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"form-group\">\r\n                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\r\n                <Col md={10}>\r\n                    <Control.text className=\"form-control\"  model=\".lastName\" id=\"LastName\" placeholder=\"Last Name\"\r\n                        validators={{\r\n                            required, minMaxLength: minMaxLength(3, 15)\r\n                        }}\r\n                    />\r\n                    <Errors className=\"text-danger\"\r\n                        model=\".lastName\"\r\n                        show=\"touched\"\r\n                        messages={{\r\n                            required: 'Rquired field',\r\n                            minMaxLength: 'Please enter a valid last name'\r\n                        }}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"form-group\">\r\n                <Label htmlFor=\"telNum\" md={2}>Tel. Number</Label>\r\n                <Col md={10}>\r\n                    <Control.text className=\"form-control\" model=\".telNum\" id=\"TelNum\" placeholder=\"Tel. Number\" \r\n                        validators={{\r\n                            required, minMaxLength: minMaxLength(8, 12), isNumber\r\n                        }}\r\n                    />\r\n                    <Errors className=\"text-danger\" \r\n                        model=\".telNum\"\r\n                        show=\"touched\"\r\n                        messages={{\r\n                            required: \"Required field\",\r\n                            minMaxLength: \"Please enter a valid Phone number\",\r\n                            isNumber: \" ____ This field must contains only numbers\"\r\n                        }}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"form-group\">\r\n                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                <Col md={10}>\r\n                    <Control.text className=\"form-control\" model=\".email\" id=\"email\" placeholder=\"Email\" \r\n                        validators={{\r\n                            required, validEmail\r\n                        }}\r\n                    />\r\n                    <Errors className=\"text-danger\" \r\n                        model=\".email\"\r\n                        show=\"touched\"\r\n                        messages={{\r\n                            required: \"Required field\",\r\n                            validEmail: \"Enter a valid email\"\r\n                        }}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"form-group\">\r\n                <Col md={{size: 7, offset:2}}>\r\n                    <div className=\"form-check\">\r\n                        <Label check>\r\n                            <Control.checkbox className=\"form-check-input\" model=\".agree\" id=\"agree\" />\r\n                            <strong>May we contact you</strong>\r\n                        </Label>\r\n                    </div>\r\n                </Col>\r\n                <Col md={{size: 2, offset: 1}}>\r\n                    <Control.select className=\"form-control\" model=\".contactType\" id=\"contactType\">\r\n                        <option>Tel.</option>\r\n                        <option>Email</option>\r\n                    </Control.select>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"form-group\">\r\n                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                <Col md={10}>\r\n                    <Control.textarea className=\"form-control\" rows=\"10\" model=\".message\" id=\"message\" placeholder=\"Your Feedback\" />\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"form-group\">\r\n                <Col md={{size: 3, offset:2}}>\r\n                    <Button type=\"submit\" color=\"primary\">Send Feedback</Button>\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n        )\r\n    }\r\n};\r\n\r\n//This is a Login Form in the Header Component\r\nexport class LoginForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        }\r\n        \r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n    };\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n        isModalOpen: !this.state.isModalOpen\r\n        })\r\n    };\r\n\r\n    handleLogin(event){\r\n        alert(\"User Name: \" + this.user.value + \" Password: \" + this.pwd.value + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n        this.toggleModal();\r\n    };\r\n    \r\n    render(){\r\n        return(\r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                <ModalBody>\r\n                    <ReactstrapForm onSubmit={this.handleLogin}>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"username\">User Name:</Label>\r\n                            <Input type=\"text\" name=\"username\" id=\"username\" innerRef={(userInput) => this.user = userInput} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"password\">Password:</Label>\r\n                            <Input type=\"password\" name=\"password\" id=\"password\" innerRef={(userInput) => this.pwd = userInput} />\r\n                        </FormGroup>\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                                <Input type=\"checkbox\" name=\"rememberMe\" innerRef={(userInput) => this.remember = userInput} />Remember Me\r\n                            </Label>\r\n                        </FormGroup>\r\n                        <Button type=\"submit\" color=\"primary\">Login</Button>     \r\n                    </ReactstrapForm>\r\n                </ModalBody>\r\n            </Modal>\r\n        )\r\n    }\r\n};","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport { RenderDish, RenderComments} from './RenderComponent';\r\nimport { CommentForm } from './FormsComponent';\r\nimport { Loading } from './LoadingComponent';\r\n\r\nconst DishDetail = (props) => {\r\n    if(props.loading){\r\n        return(\r\n                <Loading />\r\n        )\r\n    }else if(props.errorMsg){\r\n        return(\r\n            <div className=\"container py-4 my-4\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-auto my-4\">\r\n                        <h4>{props.errorMsg}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }else if(props.dish != null){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/Menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                    </div>\r\n                </div>\r\n            \r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderDish dish={props.dish} />\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <h4 className=\"pb-4\">Comments</h4>\r\n                        <RenderComments cmnts={props.cmnts} em={props.cmntsErrorMsg} />\r\n                        <CommentForm postCmnt={props.postCmnt} dishId={props.dish.id} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }else return (<div></div>);\r\n    };\r\n\r\nexport default DishDetail;","import React, { Component } from 'react';\r\nimport {Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron, Button } from 'reactstrap';\r\nimport {NavLink} from 'react-router-dom';\r\nimport { LoginForm } from './FormsComponent';\r\n\r\nclass Header extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      isNavOpen: false,\r\n    };\r\n    this.toggleNav = this.toggleNav.bind(this);\r\n\r\n  };\r\n\r\n  toggleNav (){\r\n    this.setState({\r\n      isNavOpen: !this.state.isNavOpen\r\n    })\r\n  };\r\n\r\n  toggleModalRef = ({toggleModal}) =>{\r\n    this.showModal = toggleModal;\r\n  };\r\n\r\n  onLoginClick = () =>{\r\n    this.showModal()\r\n  };\r\n  \r\n  render(){\r\n    return(\r\n      <React.Fragment>\r\n        <Navbar dark expand=\"md\">\r\n            <div className=\"container\">\r\n                <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                    <img src='../assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' />\r\n                </NavbarBrand>\r\n                <NavbarToggler onClick={this.toggleNav} />\r\n                <Collapse navbar >\r\n                  <Nav navbar className=\"mx-auto\">\r\n                    <NavItem>\r\n                      <NavLink className=\"nav-link\" to=\"/home\"> <span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                      <NavLink className=\"nav-link\" to=\"/aboutus\"> <span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                      <NavLink className=\"nav-link\" to=\"/menu\"> <span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                      <NavLink className=\"nav-link\" to=\"/contactus\"> <span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                    </NavItem>\r\n                  </Nav>\r\n                  <Nav className=\"ml-auto\" navbar onClick={this.onLoginClick}>\r\n                    <NavItem className=\"ml-5\">\r\n                        <Button outline color=\"primary\"><span className=\"fa fa-sign-in fa-lg\"> Login</span></Button>\r\n                    </NavItem>\r\n                  </Nav>\r\n                </Collapse>\r\n            </div>\r\n        </Navbar>\r\n        <Jumbotron>\r\n          <div className=\"container\">\r\n              <div className=\"row row-header\">\r\n                  <div className=\"col-12 col-sm-6\">\r\n                    <h1>Ristorante con Fusion</h1>\r\n                    <p>We take inspiration from the World's best cuisines, \r\n                         and create a unique fusion experience. Our lipsmacking \r\n                         creations will tickle your culinary senses!\r\n                    </p>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n        </Jumbotron>\r\n        <LoginForm ref={this.toggleModalRef} />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n};\r\nexport default Header;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n        <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><NavLink to=\"/home\">Home</NavLink></li>\r\n                        <li><NavLink to=\"aboutus\">About</NavLink></li>\r\n                        <li><NavLink to=\"/menu\">Menu</NavLink></li>\r\n                        <li><NavLink to=\"/contactus\">Contact</NavLink></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google mr-1\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook mr-1\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin mr-1\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter mr-1\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google mr-1\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    )\r\n};\r\nexport default Footer;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { ContactForm } from './FormsComponent';  \r\n\r\nfunction Contact(props){\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Contact</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                    <h5>Map of our Location</h5>\r\n                </div>\r\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                    <div className=\"btn-group\" role=\"group\">\r\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                        <a role=\"button\" className=\"btn btn-info\" href=\"skype\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h3>Send us Your Feedback</h3>\r\n                </div>\r\n                <div className=\"col-12 col-md-9\">\r\n                        <ContactForm postFeedback={props.postFeedback} resetFeedbackF={props.resetFeedback} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );    \r\n};\r\nexport default Contact;","import React from 'react';\r\nimport { RenderLeader } from './RenderComponent';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction About(props) {\r\n\r\n    // const eachLeader = props.leaders.map((leaderItem) => {\r\n    //     return(\r\n    //         <RenderLeader leader={leaderItem} />\r\n    //     )\r\n    // });\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        {/* {eachLeader} */}\r\n                        <RenderLeader leader={props.leaders} />\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import * as actiontype  from './actionsType';\r\nimport { baseUrl } from '../shared/baseURL';\r\n\r\n//Post new comment action\r\nexport const addPostedComment = (comment) =>({\r\n    type: actiontype.POST_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishIdx, ratingx, authorx, commentx) => (dispatch) =>{\r\n    const newComment ={\r\n        dishId: dishIdx,\r\n        rating: ratingx,\r\n        author: authorx,\r\n        comment: commentx\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    return fetch(baseUrl + \"comments\", {\r\n        method: 'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if(response.ok){\r\n            return response;\r\n        }else{\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            throw error;\r\n        }\r\n    },\r\n    response2 =>{\r\n        var errMsg = new Error(\"Check your Internet connection\\n\" + response2.message);\r\n        throw errMsg;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addPostedComment(response)))\r\n    .catch(error =>{\r\n               console.log(\"Post Comment\", error.message);\r\n               alert(\"Your comment couldn't be posted\");\r\n            }\r\n    )\r\n}\r\n//Add dishes Action\r\nexport const addDishes = (dishes)=>({\r\n    type: actiontype.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchDishes = ()=> (dispatch)=>{\r\n    dispatch(dishesLoading());\r\n    return fetch(baseUrl + \"dishes\")\r\n        .then(response => {\r\n            if(response.ok){\r\n                return response;\r\n            }else{\r\n                var errorx = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                //errorx.response = errorx;\r\n                throw errorx;\r\n            }\r\n        },\r\n            response2 =>{\r\n                var errMess = new Error(response2.message + \", Check The Server\");\r\n                throw errMess; \r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n};\r\n\r\nexport const dishesLoading = ()=>({\r\n    type: actiontype.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmsg)=>({\r\n    type: actiontype.DISHES_FAILED,\r\n    payload: errmsg\r\n});\r\n\r\n//Add comments Action\r\nexport const addComments = (comments) =>({\r\n    type: actiontype.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchComments = ()=> (dispatch)=>{\r\n    return fetch(baseUrl + 'comments')\r\n    .then(response =>{\r\n        if(response.ok){ \r\n            return response;\r\n        }\r\n        else{\r\n            var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\r\n            throw error;\r\n        }\r\n    })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmsg) =>({\r\n    type: actiontype.COMMENTS_FAILED,\r\n    payload: errmsg\r\n});\r\n\r\n//Add promotions Action\r\nexport const addPromos = (promos) =>({\r\n    type: actiontype.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchPromotions = ()=> (dispatch)=>{\r\n    dispatch(promosLoading());\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if(response.ok){\r\n            return response;\r\n        }else{\r\n            var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\r\n            throw error;\r\n        }\r\n    })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n};\r\n\r\nexport const promosLoading = ()=>({\r\n    type: actiontype.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed =(errMsg)=>({\r\n    type: actiontype.PROMOS_FAILED,\r\n    payload: errMsg\r\n});\r\n\r\n//Add Leaders action\r\nexport const addLeaders = (leaders) =>({\r\n    type: actiontype.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) =>{\r\n    dispatch(leadersLoading())\r\n\r\n    return fetch(baseUrl + \"leaders\")\r\n    .then(response =>{\r\n        if(response.ok){\r\n            return response;\r\n        }else{\r\n            let error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            throw error;\r\n        }\r\n    },\r\n    response2 =>{\r\n        var errMess = new Error(response2.message + \", Check The Server\");\r\n        throw errMess; \r\n    })\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n};\r\n\r\nexport const leadersLoading = () =>({\r\n    type: actiontype.LEADERS_LOADING,\r\n});\r\n\r\nexport const leadersFailed = (errMsg) =>({\r\n    type: actiontype.LEADERS_FAILED,\r\n    payload: errMsg\r\n});\r\n\r\n//Post Feedback action\r\nexport const addPostedFeedback = (feedback) =>({\r\n    type: actiontype.POST_FEEDBACK,\r\n    payload: feedback\r\n});\r\n\r\nexport const postFeedback = (feedbackObj) => (dispatch) =>{\r\n    \r\n    return fetch(baseUrl + 'feedback', {\r\n        method: 'POST',\r\n        body: JSON.stringify(feedbackObj),\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"same-origin\"\r\n\r\n    })\r\n    .then(response => {\r\n        if(response.ok){\r\n            return response;\r\n        }else{\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            throw error;\r\n        }\r\n    },\r\n    response2 =>{\r\n        var errMsg = new Error(\"Check your Internet connection\\n\" + response2.message);\r\n        throw errMsg;\r\n    })\r\n    .then(response => response.json())\r\n    .then(feedback => {\r\n            dispatch(addPostedFeedback(feedback));\r\n            alert(\"Thank you! Your feedback is highly appreciated\");\r\n        })\r\n    .catch(error =>{\r\n             console.log(\"Error message\" + error.message);\r\n             alert(\"Unfortunately your feedback couldn't be sent\");\r\n        })\r\n}","export const POST_COMMENT = 'POST_COMMENT'\r\n\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\n\r\nexport const ADD_COMMENTS = 'ADD_COMMENT';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\n\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\n\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\n\r\n\r\nexport const POST_FEEDBACK = 'POST_FEEDBACK';","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Home from \"./HomeComponent\";\r\nimport Menu from \"./MenuComponent\";\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport { mapStateToProps, mapDispatchToProps } from '../redux/connectStore';\r\nimport { TransitionGroup, CSSTransition} from 'react-transition-group';\r\n\r\nclass Main extends Component {\r\n\r\n  componentDidMount(){\r\n    this.props.fetchLeaders();\r\n    this.props.fetchDishesx();\r\n    this.props.fetchPromotions();\r\n    this.props.fetchComments();\r\n  };\r\n  \r\n  render(){\r\n    const homePage = () =>{\r\n      return(\r\n        <Home dish={this.props.dishes.mountedDishes.filter((dishItem) => dishItem.featured)[0]}\r\n              dishesLoading={this.props.dishes.isLoading}\r\n              dishesErrorMsg={this.props.dishes.errMsg}\r\n              promo={this.props.promotions.mountedPromotions.filter((promoItem) => promoItem.featured)[0]} \r\n              promoLoading={this.props.promotions.isLoading}\r\n              promoErrorMsg={this.props.promotions.errMsg}\r\n              leader={this.props.leaders.mountedLeaders.filter((leaderItem) => leaderItem.featured)[0]}\r\n              leadersLoading={this.props.leaders.isLoading}\r\n              leadersErrorMsg={this.props.leaders.errMsg}\r\n\r\n        />\r\n      );\r\n    };\r\n\r\n    const dishWithId = ({match}) =>{\r\n      return(\r\n        <DishDetail dish={this.props.dishes.mountedDishes.filter((ddItem) =>  ddItem.id === parseInt(match.params.dishIdx, 10))[0]}\r\n                    loading={this.props.dishes.isLoading}\r\n                    errorMsg={this.props.dishes.errMsg}\r\n                    cmnts={this.props.comments.mountedComments.filter((cmntsItem) => cmntsItem.dishId === parseInt(match.params.dishIdx, 10))}\r\n                    cmntsErrorMsg={this.props.comments.errMsg}\r\n                    postCmnt={this.props.postComment}\r\n        />\r\n      );\r\n      \r\n    };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"container\">\r\n        <TransitionGroup>\r\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n            <Switch location={this.props.location}>\r\n              <Route path=\"/home\" component={homePage} />\r\n              <Route path=\"/aboutus\" component={  () => <About leaders={this.props.leaders.mountedLeaders}/>  } />\r\n              <Route exact path=\"/menu\" component={  () => <Menu dishes2={this.props.dishes} />  } />\r\n              <Route path=\"/menu/:dishIdx\" component={dishWithId}  />\r\n              <Route path=\"/contactus\" component={ () => <Contact postFeedback={this.props.postFeedback} resetFeedback={this.props.resetFeedbackForm} />} />\r\n              <Redirect to=\"/home\" />\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps) (Main));\r\n","import { postComment, fetchDishes, fetchComments, fetchPromotions, fetchLeaders, postFeedback } from './actionsCreator';\r\nimport { actions } from 'react-redux-form';\r\n\r\n//Connect the app to the Redux Store \r\nexport const mapStateToProps = (x) =>{\r\n    return{\r\n        dishes: x.dishes,\r\n        comments: x.comments,\r\n        promotions: x.promotions,\r\n        leaders: x.leaders\r\n    };\r\n  };\r\n  \r\n\r\n\r\n  \r\n  export const mapDispatchToProps = (dispatch) =>({\r\n//This helps us to Connect the action \"addComment\" function with the Reducer function \"Comments\"\r\n      postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n//This is for connecting to the store but this time using a Redux-thunk function...\r\n      fetchDishesx: () => dispatch(fetchDishes()),\r\n//This is to reset the feedback Form in contact us page\r\n      resetFeedbackForm: () => dispatch(actions.reset(\"feedback\")),\r\n//This is for connecting to the store in order to fetch the comments from db.json file\r\n      fetchComments: () => dispatch(fetchComments()),\r\n//This is for connecting to the store in order to fetch the promotions from db.json file\r\n      fetchPromotions: () => dispatch(fetchPromotions()),\r\n//This is for connecting to the store in order to fetch the leaders from db.json file\r\n      fetchLeaders: () => dispatch(fetchLeaders()),\r\n//This for posting the feedback form's data to the server \r\n      postFeedback: (feedbackObj) => dispatch(postFeedback(feedbackObj))\r\n  });","import * as actiontype  from './actionsType'\r\n\r\nexport const Dishes = (state = {isLoading: true, errMsg: null, mountedDishes: []}, action) =>{\r\n    switch(action.type){\r\n        case actiontype.ADD_DISHES:\r\n            return{\r\n                ...state, isLoading: false, errMsg: null, mountedDishes: action.payload\r\n            };\r\n\r\n        case actiontype.DISHES_LOADING:\r\n            return{\r\n                ...state, isLoading: true, errMsg: null, mountedDishes: []\r\n            };\r\n\r\n        case actiontype.DISHES_FAILED:\r\n            return{\r\n                ...state, isLoading: false, errMsg: action.payload, mountedDishes: []\r\n            };\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","import * as actiontype from './actionsType';\r\n\r\nexport const Comments = (state = {errMsg: null, mountedComments: []}, action) =>{\r\n    switch(action.type){\r\n        case actiontype.POST_COMMENT:\r\n            return {\r\n                ...state, mountedComments: state.mountedComments.concat(action.payload)\r\n            };\r\n\r\n        case actiontype.ADD_COMMENTS:\r\n            return {\r\n                ...state, errMsg: null, mountedComments: action.payload\r\n            };\r\n        \r\n        case actiontype.COMMENTS_FAILED:\r\n            return {\r\n                ...state, errMsg: action.payload, mountedComments: []\r\n                };\r\n            \r\n        default:\r\n            return state;\r\n    };\r\n};","import * as actiontype from './actionsType'\r\nexport const Leaders = (state = { isLoading: true, errMsg: null, mountedLeaders: [] }, action) =>{\r\n    switch(action.type){\r\n        case actiontype.ADD_LEADERS:\r\n            return({\r\n                ...state, isLoading: false, errMsg: null, mountedLeaders: action.payload\r\n            });\r\n        case actiontype.LEADERS_LOADING:\r\n            return({\r\n                ...state, isLoading: true, errMsg: null, mountedLeaders: []\r\n            });\r\n        case actiontype.LEADERS_FAILED:\r\n            return({\r\n                ...state, isLoading: false, errMsg: action.payload, mountedLeaders: [] \r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as actiontype from \"./actionsType\";\r\n\r\nexport const Promotions = (state = {isLoading: true, errMsg: null, mountedPromotions: []}, action) =>{\r\n    switch(action.type){\r\n        case actiontype.ADD_PROMOS:\r\n            return{\r\n                ...state, isLoading: false, errMsg: null, mountedPromotions: action.payload\r\n            };\r\n\r\n        case actiontype.PROMOS_LOADING:\r\n            return{\r\n                ...state, isLoading: true, errMsg: null, mountedPromotions: []\r\n            };\r\n\r\n        case actiontype.PROMOS_FAILED:\r\n            return{\r\n                ...state, isLoading: false, errMsg: action.payload, mountedPromotions: []\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","export const initialFeedback = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    telNum: \"\",\r\n    email: \"\",\r\n    agree: false,\r\n    contactType: \"Tel.\",\r\n    message: \"\"\r\n}","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { ConfigStore } from './redux/configStore';\n\nconst storex = ConfigStore();\n\nclass App extends Component {\n  \n  render(){\n  return (\n    <Provider store = {storex}>\n      <BrowserRouter>\n        <div className=\"App\">\n          <Main />\n        </div>\n      </BrowserRouter>\n    </Provider>\n  );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishesRed';\r\nimport { Comments } from './commentsRed';\r\nimport { Leaders } from './leadersRed';\r\nimport { Promotions } from './promotionsRed';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { initialFeedback } from './FeedbackFormState';\r\n\r\nexport const ConfigStore = () =>{\r\n  const  store = createStore(\r\n    combineReducers({\r\n      dishes: Dishes,\r\n      comments: Comments,\r\n      leaders: Leaders,\r\n      promotions: Promotions,\r\n\r\n      ...createForms({\r\n        feedback: initialFeedback\r\n      })\r\n    }),\r\n    applyMiddleware(thunk, logger)\r\n  );\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}